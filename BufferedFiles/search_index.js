var documenterSearchIndex = {"docs":
[{"location":"#BufferedFiles-Documentation","page":"BufferedFiles Documentation","title":"BufferedFiles Documentation","text":"","category":"section"},{"location":"","page":"BufferedFiles Documentation","title":"BufferedFiles Documentation","text":"","category":"page"},{"location":"#BufferedFiles","page":"BufferedFiles Documentation","title":"BufferedFiles","text":"","category":"section"},{"location":"","page":"BufferedFiles Documentation","title":"BufferedFiles Documentation","text":"Modules = [BufferedFiles]","category":"page"},{"location":"#BufferedFiles.BufferedFiles","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedFiles","text":"BufferedFiles\n\nImplementations of a better Filehandles.\n\nIncludes a Read-Only Filehandle, a better Write-Only Filehandle as well as Mmap-Filehandles (currently only on Unix) allowing both Reading and writing (but not appending (yet)).\n\nMain Functions: bufferedopen and @om_str\n\n\n\n\n\n","category":"module"},{"location":"#BufferedFiles.DEFAULT_BUFSIZE","page":"BufferedFiles Documentation","title":"BufferedFiles.DEFAULT_BUFSIZE","text":"const DEFAULT_BUFSIZE = 16 * (1024) * (1024)\n\nDefault size of the read/write-buffer of BufferedReadFile and BufferedWriteFile.\n\n\n\n\n\n","category":"constant"},{"location":"#BufferedFiles.BufferedFile","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedFile","text":"abstract type BufferedFile <: IO end\n\nAbstract Type for my Filehandles, to overwrite some of Julias functions from io.jl that cause allocations.\n\n\n\n\n\n","category":"type"},{"location":"#BufferedFiles.BufferedOpenMode","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedOpenMode","text":"abstract type BufferedOpenMode end\n\nTypes Implemented by @om_str, used in bufferedopen\n\n\n\n\n\n","category":"type"},{"location":"#BufferedFiles.BufferedOpenMode-Tuple{AbstractString}","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedOpenMode","text":"BufferedOpenMode(pattern::AbstractString)\n\nConvert pattern into its corresponding subtype of BufferedOpenMode.\n\nRecommended Usage of this is with the @om_str macro at parse-time.\n\n\n\n\n\n","category":"method"},{"location":"#BufferedFiles.BufferedReadFile","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedReadFile","text":"BufferedReadFile\n\nBuffered Filehandle for more performant Reading.\n\nOpened via bufferedopen(filename, om\"r\").\n\n\n\n\n\n","category":"type"},{"location":"#BufferedFiles.BufferedWriteFile","page":"BufferedFiles Documentation","title":"BufferedFiles.BufferedWriteFile","text":"BufferedReadFile\n\nBuffered Filehandle for more performant Reading.\n\nOpened via bufferedopen(filename, om\"r\").\n\n\n\n\n\n","category":"type"},{"location":"#BufferedFiles.RawFile","page":"BufferedFiles Documentation","title":"BufferedFiles.RawFile","text":"struct RawFile <: BufferedFile \n    fd::Cint\nend\n\nRaw Filehandle with no Buffer, that calls the C-Functions for Reading, Writing etc.\n\nUsed in BufferedReadFile and BufferedWriteFile.\n\n\n\n\n\n","category":"type"},{"location":"#BufferedFiles.bufferedopen","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, om\"r\"[, bufsize::Integer])\n\nOpen a File in Read-Only Mode.\n\nReturns a BufferedReadFile.\n\n\n\n\n\n","category":"function"},{"location":"#BufferedFiles.bufferedopen-2","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, om\"w\"[, bufsize::Integer])\n\nOpen a File in Write-Only Mode.\n\nTruncates the File when opening it.\n\nReturns a BufferedWriteFile.\n\n\n\n\n\n","category":"function"},{"location":"#BufferedFiles.bufferedopen-Tuple{AbstractString, AbstractString, Vararg{Any}}","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, openmode::AbstractString, args...)\n\nOpen a File.\n\nWhich type of Filehandle is returned depends on openmode.\n\n\n\n\n\n","category":"method"},{"location":"#BufferedFiles.bufferedopen-Tuple{AbstractString, BufferedFiles.MmapReadWrite, Integer}","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, om\"mr+\", fs::Integer)\n\nOpen a file via Mmap in Read-Write Mode.\n\nThe file will be truncated to fs Byte before opening it via Mmap.\n\nAppending is currently not possible and will throw an EOFError.\n\n\n\n\n\n","category":"method"},{"location":"#BufferedFiles.bufferedopen-Tuple{AbstractString, BufferedFiles.MmapReadWrite}","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, om\"mr+\")\n\nOpen a file via Mmap in Read-Write Mode.\n\nAppending is currently not possible and will throw an EOFError.\n\n\n\n\n\n","category":"method"},{"location":"#BufferedFiles.bufferedopen-Tuple{AbstractString, BufferedFiles.MmapRead}","page":"BufferedFiles Documentation","title":"BufferedFiles.bufferedopen","text":"bufferedopen(file::AbstractString, om\"mr\")\n\nOpen a file via Mmap in Read-Only Mode.\n\n\n\n\n\n","category":"method"},{"location":"#BufferedFiles.@om_str-Tuple{Any}","page":"BufferedFiles Documentation","title":"BufferedFiles.@om_str","text":"@om_str \"pattern\"\nom\"pattern\"\n\nConvert pattern into its corresponding subtype of BufferedOpenMode at parse-time.\n\n\n\n\n\n","category":"macro"},{"location":"#Libc","page":"BufferedFiles Documentation","title":"Libc","text":"","category":"section"},{"location":"","page":"BufferedFiles Documentation","title":"BufferedFiles Documentation","text":"Modules = [BufferedFiles.Libc]","category":"page"},{"location":"#BufferedFiles.Libc","page":"BufferedFiles Documentation","title":"BufferedFiles.Libc","text":"Libc\n\nInterface for all the C-Calls and Constants used.\n\nIf a C-Function returns an error-code, Base.systemerror is used to confirm the return code, so the User does not need to do any error-checking themselfs.\n\n\n\n\n\n","category":"module"}]
}
