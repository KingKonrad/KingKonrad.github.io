var documenterSearchIndex = {"docs":
[{"location":"index.html#PdFiles","page":"PdFiles","title":"PdFiles","text":"","category":"section"},{"location":"index.html","page":"PdFiles","title":"PdFiles","text":"pdopen\n@om_str","category":"page"},{"location":"index.html#PdFiles.pdopen","page":"PdFiles","title":"PdFiles.pdopen","text":"pdopen(file::AbstractString, openmode::AbstractString, args...)\n\nÖffne eine Datei. \n\nWelcher Filehandletyp genutzt wird, wird dynamisch bei Runtime bestimmt. Wenn es bereits bei Compilezeit bekannt ist, in welchem Modus diese Datei geöffnet wird, sollte @om_str genutzt werden.\n\n\n\n\n\npdopen(file::AbstractString, om\"r\"[, bufsize::Integer])\n\nÖffne eine Datei gebuffered im Read-Only Modus.\n\n\n\n\n\npdopen(file::AbstractString, om\"w\"[, bufsize::Integer])\n\nÖffne eine Datei gebuffered im Write-Only Modus.\n\nJe nachdem, ob die Datei bereits existiert, wird sie entweder erstellt, oder auf Länge 0 truncated.\n\n\n\n\n\npdopen(file::AbstractString, om\"mr\")\n\nÖffne eine Datei via Mmap im Read-Only Modus. Wird wie ein Normales Filehandle genutzt, aber im Hintergrund wird Mmap genutzt.\n\n\n\n\n\npdopen(file::AbstractString, om\"mrw\")\n\nÖffne eine Datei via Mmap im Read-Write Modus. Wird wie ein Normales Filehandle genutzt, aber im Hintergrund wird Mmap genutzt.\n\n\n\n\n\npdopen(file::AbstractString, om\"mrw\", fs::Integer)\n\nÖffne eine Datei via Mmap im Read-Write Modus. Wird wie ein Normales Filehandle genutzt, aber im Hintergrund wird Mmap genutzt.\n\nVia fs kann die Dateigröße gesetzt werden. Die Datei wird dann, bevor sie via Mmap geöffnet wird, per ftruncate auf die gewünschte Länge gesetzt.\n\n\n\n\n\n","category":"function"},{"location":"index.html#PdFiles.@om_str","page":"PdFiles","title":"PdFiles.@om_str","text":"@om_str \"pattern\"\nom\"pattern\"\n\nFindet bei Parse-Zeit den Gewünschten OpenMode, wodurch bei Compilezeit dann schon das gewünschte Filehandle bekannt ist.\n\n\n\n\n\n","category":"macro"}]
}
